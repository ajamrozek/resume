{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["SkillTemplate","props","skills","map","skill","SkillsTemplate","skillTemplate","Object","keys","skillKey","className","EducationTemplate","educationTemplate","education","sort","a","b","start","edu","idx","name","field","location","end","JobsTemplate","jobsTemplate","jobs","Date","parse","job","clientName","title","format","dangerouslySetInnerHTML","__html","details","join","App","resumeData","require","style","marginBottom","margin","tagLine","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"mySAGA,SAASA,EAAcC,GACrB,OAAOA,EAAMC,OAAOC,KAAI,SAAAC,GAAK,OAAI,6BAAiBA,GAARA,MAE5C,SAASC,EAAeJ,GACtB,IACIK,EADYC,OAAOC,KAAKP,EAAMC,QACJC,KAAI,SAAAM,GAAQ,OAAI,sBAAKC,UAAU,SAAf,UAA6C,sBAAMA,UAAU,QAAhB,SAA+CD,GAAlBA,EAAS,QAC/H,6BACE,cAACT,EAAD,CAAsCE,OAAQD,EAAMC,OAAOO,IAAvCA,EAAS,UADtBA,EAAS,QADuDA,EAAS,UAIpF,OAAO,qBAAKC,UAAU,YAAf,SAA4BJ,IAIrC,SAASK,EAAkBV,GACzB,IAAIW,EAAoBX,EAAMY,UAC3BC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,MAAQD,EAAEC,MAAQ,GAAK,KACxCd,KAAI,SAACe,EAAKC,GAAN,OAAc,sBAAqBT,UAAW,oBAAhC,UACnB,sBAAMA,UAAU,OAAhB,SAAwBQ,EAAIE,OAC5B,sBAAMV,UAAU,QAAhB,SAAyBQ,EAAIG,QAC7B,uBAAMX,UAAU,QAAhB,UACE,uBAAMA,UAAU,WAAhB,cAA6BQ,EAAII,SAAjC,OACA,uBAAMZ,UAAU,QAAhB,cAA0BQ,EAAID,MAA9B,MAAwCC,EAAIK,IAA5C,YAL2B,MAAMJ,MASnC,OAAO,qBAAKT,UAAW,uBAAhB,SAAyCE,IAGpD,SAASY,EAAavB,GACpB,IAAIwB,EAAexB,EAAMyB,KACtBZ,MAAK,SAACC,EAAGC,GAAJ,OAAUW,KAAKC,MAAMb,EAAEE,OAASU,KAAKC,MAAMZ,EAAEC,OAAS,GAAK,KAChEd,KAAI,SAAC0B,EAAKV,GAAN,OAAc,sBAAqBT,UAAW,cAAhC,UACnB,sBAAMA,UAAU,OAAhB,SAAwBmB,EAAIC,aAC5B,sBAAMpB,UAAU,QAAhB,SAAyBmB,EAAIE,QAC7B,uBAAMrB,UAAU,QAAhB,UACE,uBAAMA,UAAU,WAAhB,cAA6BmB,EAAIP,SAAjC,OACA,uBAAMZ,UAAU,QAAhB,cAA0BsB,YAAOL,KAAKC,MAAMC,EAAIZ,OAAQ,UAAxD,MAAiF,MAAXY,EAAIN,IAAcS,YAAOL,KAAKC,MAAMC,EAAIN,KAAM,UAAW,UAA/H,UAGF,qBAAKb,UAAU,UAAUuB,wBAAyB,CAACC,OAAQL,EAAIM,QAAQC,KAAK,SAR/C,MAAMjB,MAYnC,OAAO,qBAAKT,UAAW,kBAAhB,SAAoCe,IAqBhCY,MAjBf,WACE,IAAIC,EAAaC,EAAQ,IAEzB,OACE,sBAAK7B,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,oBAAI8B,MAAO,CAACC,aAAc,GAA1B,2BACA,oBAAID,MAAO,CAACE,OAAQ,GAApB,SAAyBJ,EAAWP,QACpC,8BAAKO,EAAWK,QAAhB,OACA,cAACtC,EAAD,CAAgBH,OAAQoC,EAAWpC,SACnC,cAACS,EAAD,CAAmBE,UAAWyB,EAAWzB,eAE3C,cAACW,EAAD,CAAcE,KAAMY,EAAWZ,WClDtBkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.abacbd64.chunk.js","sourcesContent":["import './App.css';\nimport { format } from 'date-fns'\n\nfunction SkillTemplate(props){\n  return props.skills.map(skill => <li key={skill}>{skill}</li>);\n}\nfunction SkillsTemplate(props){\n  var skillKeys = Object.keys(props.skills); \n  var skillTemplate = skillKeys.map(skillKey => <div className=\"skills\" key={skillKey+\"Div\"}><span className=\"skill\" key={skillKey+\"Span\"}>{skillKey}</span>\n    <ul key={skillKey+\"Ul\"}>\n      <SkillTemplate key={skillKey+\"Skill\"} skills={props.skills[skillKey]}/>\n    </ul></div>)\n  return <div className=\"allSkills\">{skillTemplate}</div>;\n\n}\n\nfunction EducationTemplate(props){\n  var educationTemplate = props.education\n    .sort((a, b) => a.start < b.start ? 1 : -1)\n    .map((edu, idx) => <div key={\"edu\"+idx} className={\"summary education\"}>\n    <span className=\"name\">{edu.name}</span> \n    <span className=\"field\">{edu.field}</span>\n    <span className=\"right\">\n      <span className=\"location\">({edu.location})</span> \n      <span className=\"dates\">[{edu.start} - {edu.end}]</span>\n      </span>\n    </div>);\n\n    return <div className={\"history allEducation\"}>{educationTemplate}</div>;\n}\n\nfunction JobsTemplate(props){\n  var jobsTemplate = props.jobs\n    .sort((a, b) => Date.parse(a.start) < Date.parse(b.start) ? 1 : -1)    \n    .map((job, idx) => <div key={\"job\"+idx} className={\"summary job\"}>\n    <span className=\"name\">{job.clientName}</span> \n    <span className=\"title\">{job.title}</span>\n    <span className=\"right\">\n      <span className=\"location\">({job.location})</span>\n      <span className=\"dates\">[{format(Date.parse(job.start), \"M/yyyy\")} - {job.end != null ? format(Date.parse(job.end), \"M/yyyy\"): \"present\"}]</span>\n    </span>\n    \n    <div className=\"details\" dangerouslySetInnerHTML={{__html: job.details.join(\"\")}}/>\n\n    </div>)\n\n    return <div className={\"history allJobs\"}>{jobsTemplate}</div>;\n}\n\n\nfunction App() {\n  var resumeData = require('./resume.json');\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 style={{marginBottom: 0}}>Alex Jamrozek</h1>\n        <h3 style={{margin: 0}}>{resumeData.title}</h3>\n        <p >{resumeData.tagLine} </p>\n        <SkillsTemplate skills={resumeData.skills}/>\n        <EducationTemplate education={resumeData.education}/>\n      </header>\n      <JobsTemplate jobs={resumeData.jobs}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}